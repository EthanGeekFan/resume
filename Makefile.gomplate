# Resume Build System using gomplate (no Python dependencies)
# This Makefile uses gomplate for template rendering

.PHONY: all english chinese generate build install-gomplate clean help legacy-english legacy-chinese

# Default target - generate from templates and build PDFs
all: generate english chinese

# Generate LaTeX files from templates and data using gomplate
generate:
	@echo "Generating LaTeX files from templates using gomplate..."
	gomplate --file resume_template.gomplate.tex --datasource data=resume.en.yaml --out English.tex
	gomplate --file resume_template.gomplate.tex --datasource data=resume.zh.yaml --out Chinese.tex

# Generate specific language
generate-english:
	@echo "Generating English LaTeX file using gomplate..."
	gomplate --file resume_template.gomplate.tex --datasource data=resume.en.yaml --out English.tex

generate-chinese:
	@echo "Generating Chinese LaTeX file using gomplate..."
	gomplate --file resume_template.gomplate.tex --datasource data=resume.zh.yaml --out Chinese.tex

# Compile English resume to PDF
english: generate-english build
	@echo "Compiling English resume..."
	docker run --rm -v "$(shell pwd):/data" pdflatex English.tex && rm -f English.aux English.log English.out English.toc

# Compile Chinese resume to PDF
chinese: generate-chinese build
	@echo "Compiling Chinese resume..."
	docker run --rm -v "$(shell pwd):/data" pdflatex Chinese.tex && rm -f Chinese.aux Chinese.log Chinese.out Chinese.toc

# Legacy targets for direct LaTeX compilation (without template generation)
legacy-english: build
	@echo "Compiling English resume (legacy mode)..."
	docker run --rm -v "$(shell pwd):/data" pdflatex English.tex && rm -f English.aux English.log English.out English.toc

legacy-chinese: build
	@echo "Compiling Chinese resume (legacy mode)..."
	docker run --rm -v "$(shell pwd):/data" pdflatex Chinese.tex && rm -f Chinese.aux Chinese.log Chinese.out Chinese.toc

# Build Docker image for LaTeX compilation
build:
	@echo "Building pdflatex Docker image..."
	docker build -t pdflatex .

# Install gomplate (cross-platform)
install-gomplate:
	@echo "Installing gomplate..."
	@if command -v brew >/dev/null 2>&1; then \
		echo "Installing via Homebrew..."; \
		brew install gomplate; \
	elif command -v curl >/dev/null 2>&1; then \
		echo "Installing via curl..."; \
		curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.11.5/gomplate_linux-amd64; \
		chmod +x /usr/local/bin/gomplate; \
	else \
		echo "Please install gomplate manually from https://docs.gomplate.ca/installing/"; \
	fi

# Clean generated files
clean:
	@echo "Cleaning generated files..."
	rm -f *.aux *.log *.out *.toc *.pdf

# Clean everything including generated LaTeX files (use with caution)
clean-all: clean
	@echo "Cleaning all generated files including LaTeX files..."
	@echo "WARNING: This will remove English.tex and Chinese.tex"
	@read -p "Are you sure? [y/N] " -n 1 -r; \
	echo; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		rm -f English.tex Chinese.tex; \
	fi

# Help target
help:
	@echo "Resume Build System (gomplate version)"
	@echo "===================================="
	@echo ""
	@echo "This version uses gomplate for template rendering (no Python dependencies)"
	@echo ""
	@echo "Targets:"
	@echo "  all              - Generate LaTeX from templates and build both PDFs (default)"
	@echo "  english          - Generate and build English PDF"
	@echo "  chinese          - Generate and build Chinese PDF"
	@echo "  generate         - Generate both LaTeX files from templates"
	@echo "  generate-english - Generate only English LaTeX file"
	@echo "  generate-chinese - Generate only Chinese LaTeX file"
	@echo "  build           - Build Docker image for LaTeX compilation"
	@echo "  install-gomplate - Install gomplate CLI tool"
	@echo "  clean           - Clean auxiliary files and PDFs"
	@echo "  clean-all       - Clean everything including generated LaTeX files"
	@echo "  help            - Show this help message"
	@echo ""
	@echo "Legacy targets (compile existing LaTeX files without template generation):"
	@echo "  legacy-english  - Compile English.tex directly"
	@echo "  legacy-chinese  - Compile Chinese.tex directly"
	@echo ""
	@echo "Setup:"
	@echo "  1. Run 'make install-gomplate' to install gomplate"
	@echo "  2. Customize resume.en.yaml and resume.zh.yaml with your content"
	@echo "  3. Run 'make all' to generate and build your resumes" 